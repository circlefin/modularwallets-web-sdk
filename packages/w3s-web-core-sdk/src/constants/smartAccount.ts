/**
 * Copyright 2025 Circle Internet Group, Inc. All rights reserved.
 *
 * SPDX-License-Identifier: Apache-2.0.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at.
 *
 * Http://www.apache.org/licenses/LICENSE-2.0.
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import { entryPoint07Abi, entryPoint07Address } from 'viem/account-abstraction'

import {
  CIRCLE_MSCA_6900_V1_EP07_ABI,
  CIRCLE_MSCA_6900_V1_EP07_FACTORY_ABI,
} from '../abis'
import { CIRCLE_MSCA_6900_V07_FACTORY_BYTECODE } from '../bytecode/factory'

import type { Hex } from 'viem'

export const ENTRY_POINT_07 = {
  abi: entryPoint07Abi,
  address: entryPoint07Address,
  version: '0.7',
} as const

/**
 * The Circle Upgradable MSCA Factory.
 * @remarks TODO: Add more information once we publish the public documentation.
 */
export const FACTORY = {
  abi: CIRCLE_MSCA_6900_V1_EP07_FACTORY_ABI,
  address: '0xc83d88C018D143d08AFE910221D445189Fc6817a' as Hex,
  bytecode: CIRCLE_MSCA_6900_V07_FACTORY_BYTECODE,
} as const

export const UPGRADABLE_MSCA = {
  abi: CIRCLE_MSCA_6900_V1_EP07_ABI,
  /**
   * The address of the upgradable MSCA account implementation.
   * @remarks This address is from https://sepolia.etherscan.io/address/0xc83d88c018d143d08afe910221d445189fc6817a#readContract `accountImplementation` value.
   */
  address: '0xd3987990b728a8F62819ef2Fb58180188fb266a7' as Hex,
} as const

/**
 * The Circle Weighted Multisig Plugin.
 * @remarks TODO: Add more information once we publish the public documentation.
 */
export const CIRCLE_WEIGHTED_WEB_AUTHN_MULTISIG_PLUGIN = {
  address: '0x5a2262d58eB72B84701D6efBf6bB6586C793A65b' as Hex,
  manifestHash:
    '0xa043327d77a74c1c55cfa799284b831fe09535a88b9f5fa4173d334e5ba0fd91' as Hex,
} as const

/**
 * The Circle Default Token Callback Plugin.
 * @remarks TODO: Add more information once we publish the public documentation.
 */
export const CIRCLE_DEFAULT_TOKEN_CALLBACK_PLUGIN = {
  address: '0x03431Fb00fB2e26b5bC502DFeF8dA30E1C8643b8' as Hex,
  manifestHash:
    '0xd892482cc7e665eca1d358d318d38aa3a63c10247d473d04fc3538f4069ce4ae' as Hex,
  installData: '0x' as Hex,
} as const

/**
 * The ERC1769 Proxy. The creation code is used for computing the smart account address.
 */
export const ERC1769_PROXY = {
  creationCode:
    '0x60806040526102d38038038061001481610194565b92833981019060408183031261018f5780516001600160a01b03811680820361018f5760208381015190936001600160401b03821161018f570184601f8201121561018f5780519061006d610068836101cf565b610194565b9582875285838301011161018f57849060005b83811061017b57505060009186010152813b15610163577f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b03191682179055604051907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600080a28351156101455750600080848461012c96519101845af4903d1561013c573d61011c610068826101cf565b908152600081943d92013e6101ea565b505b6040516085908161024e8239f35b606092506101ea565b9250505034610154575061012e565b63b398979f60e01b8152600490fd5b60249060405190634c9c8ce360e01b82526004820152fd5b818101830151888201840152869201610080565b600080fd5b6040519190601f01601f191682016001600160401b038111838210176101b957604052565b634e487b7160e01b600052604160045260246000fd5b6001600160401b0381116101b957601f01601f191660200190565b9061021157508051156101ff57805190602001fd5b604051630a12f52160e11b8152600490fd5b81511580610244575b610222575090565b604051639996b31560e01b81526001600160a01b039091166004820152602490fd5b50803b1561021a56fe60806040527f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc54600090819081906001600160a01b0316368280378136915af43d82803e15604b573d90f35b3d90fdfea26469706673582212202b867e05fada64e8389ea34fca4e9048d8dde9af33f4fdd783dd16f9ba5fcf9c64736f6c63430008180033' as Hex,
} as const

export const PUBLIC_KEY_OWN_WEIGHTS = [1n]

export const THRESHOLD_WEIGHT = 1n

export const STUB_SIGNATURE =
  '0x0000be58786f7ae825e097256fc83a4749b95189e03e9963348373e9c595b15200000000000000000000000000000000000000000000000000000000000000412200000000000000000000000000000000000000000000000000000000000002400000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000006091077742edaf8be2fa866827236532ec2a5547fe2721e606ba591d1ffae7a15c022e5f8fe5614bbf65ea23ad3781910eb04a1a60fae88190001ecf46e5f5680a00000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000001700000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002549960de5880e8c687434170f6476605b8fe4aeb9a28632c7995cf3ba831d9763050000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000867b2274797065223a22776562617574686e2e676574222c226368616c6c656e6765223a224b6d62474d316a4d554b57794d6352414c6774553953537144384841744867486178564b6547516b503541222c226f726967696e223a22687474703a2f2f6c6f63616c686f73743a35313733222c2263726f73734f726967696e223a66616c73657d0000000000000000000000000000000000000000000000000000'

export const REPLAY_SAFE_HASH_V1 = {
  name: 'Weighted Multisig Webauthn Plugin',
  primaryType: 'CircleWeightedWebauthnMultisigMessage',
  domainSeparatorType:
    'EIP712Domain(string name,string version,uint256 chainId,address verifyingContract,bytes32 salt)',
  moduleType: 'CircleWeightedWebauthnMultisigMessage(bytes32 hash)',
  version: '1.0.0',
} as const

export const EIP712_PREFIX = '0x1901'

export const MINIMUM_VERIFICATION_GAS_LIMIT = 600_000
export const MINIMUM_UNDEPLOY_VERIFICATION_GAS_LIMIT = 1_500_000

export const SEPOLIA_MINIMUM_VERIFICATION_GAS_LIMIT = 600_000
export const SEPOLIA_MINIMUM_UNDEPLOY_VERIFICATION_GAS_LIMIT = 2_000_000

export const MAINNET_MINIMUM_VERIFICATION_GAS_LIMIT = 1_000_000 // TODO: Update this value once we have the final value.
export const MAINNET_MINIMUM_UNDEPLOY_VERIFICATION_GAS_LIMIT = 2_500_000 // TODO: Update this value once we have the final value.

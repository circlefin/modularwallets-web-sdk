/**
 * Copyright 2025 Circle Internet Group, Inc. All rights reserved.
 *
 * SPDX-License-Identifier: Apache-2.0.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at.
 *
 * Http://www.apache.org/licenses/LICENSE-2.0.
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Mocks for EIP-1193 rpc responses - eth_accounts and eth_requestAccounts.
 */
export const EthAccountsResponse = {
  result: ['0x0f6Fed7D7526Aaa1692438AD1D77AaA0Ea9d0a56'],
}

/**
 * Mocks for EIP-1193 rpc params - personal_sign.
 */
export const PersonalSignWrongAddressParams = ['0xdeadbeef', '0xdeadbeef']

/**
 * Mocks for EIP-1193 rpc params - personal_sign.
 */
export const PersonalSignParams = [
  '0xdeadbeef',
  '0x0f6Fed7D7526Aaa1692438AD1D77AaA0Ea9d0a56',
]

/**
 * Mocks for EIP-1193 rpc responses - personal_sign.
 */
export const PersonalSignResponse = {
  result:
    '0x0000000000000000000000000000000df7e6c9dc387cafc5ecbfa6c3a6179add000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000003e0000000000000000000000000000000000000000000000000000000000000034481d0dff1863bb58aafe20b10fc2e347a735fb95755f3bbcbc50e78da76846d7dad5b34b20000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000002c0000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000e000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000c984aff541d6ce86bb697e68ec57873c80000000000000000000000000000000000000000000000000000000000000001a043327d77a74c1c55cfa799284b831fe09535a88b9f5fa4173d334e5ba0fd9100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000018000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000e0000000000000000000000000000000000000000000000000000000000000014000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000012b09685da7842117bfedb0668ffe1b6abe4d7e57298402cc996caafebce98b979edfd692718a0962b4ed55a3e768747fe0b6541c1f348fa1e7c2582c672da94c000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002a1863bb58aafe20b10fc2e347a735fb95755f3bbcbc50e78da76846d7dad5b34b2000000000000000000000000000000000000000000000000000000000000004102000000000000000000000000000000000000000000000000000000000000024000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000060a0c43a5828012752b439cca8e2b006a55f41737ae96057d38839ecd03271406f4beaf0d77def012616d6a863c1de9ac097a59c4340d57e8e714d17c4dc736c7600000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000001700000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000d07b2274797065223a22776562617574686e2e676574222c226368616c6c656e6765223a22636f6f354d4238424162314d596673514d537748506d4d596f534e5754624a677962676d34466d6d372d49222c226f726967696e223a22616e64726f69643a61706b2d6b65792d686173683a50474f45667162664253726d6838666664526e45325a5453647072506c634152554a4e5a6e304156596c49222c22616e64726f69645061636b6167654e616d65223a22636972636c652e707773646b2e6277636f726573646b2e74657374227d00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006492649264926492649264926492649264926492649264926492649264926492',
}

/**
 * Mocks for EIP-1193 rpc params - eth_sendTransaction.
 */
export const SendTransactionToAddressMissingParams = [
  {
    data: '0xdeadbeef',
    value: 100000000n,
  },
]

/**
 * Mocks for EIP-1193 rpc params - eth_sendTransaction.
 */
export const SendTransactionParams = [
  {
    to: '0x0f6Fed7D7526Aaa1692438AD1D77AaA0Ea9d0a56',
    data: '0xdeadbeef',
    value: 100000000n,
  },
]

/**
 * Mocks for EIP-1193 rpc responses - eth_sendTransaction.
 */
export const MockSendUserOperationResponse = '0xdeadbeef'

/**
 * Mocks for EIP-1193 rpc responses - eth_sendTransaction.
 */
export const MockWaitForUserOperationReceiptResponse = {
  receipt: {
    transactionHash: '0xdeadbeef',
  },
}

/**
 * Mocks for EIP-1193 rpc responses - eth_sendTransaction.
 */
export const MockSendTransactionResponse = {
  id: undefined,
  jsonrpc: undefined,
  result: MockWaitForUserOperationReceiptResponse.receipt.transactionHash,
}

/**
 * Mocks for EIP-1193 rpc params - eth_getTransactionReceipt.
 */
export const GetTransactionReceiptParams = ['0xdeadbeef']

/**
 * Mocks for EIP-1193 rpc responses - eth_getTransactionReceipt.
 */
export const MockGetTransactionReceiptResponse = {
  id: undefined,
  jsonrpc: undefined,
  result: { receipt: { transactionHash: GetTransactionReceiptParams[0] } },
}

/**
 * Mocks for EIP-1193 rpc params - eth_signTypedData_v4.
 */
export const SignTypedDataV4WrongAddressParams = [
  '0xdeadbeef',
  {
    domain: {
      name: 'MockDomain',
      version: '1',
      chainId: 1,
      verifyingContract: '0x9876543210fedcba9876543210fedcba98765432',
    },
    message: {
      content: 'This is a test message',
    },
    primaryType: 'Message',
    types: {
      EIP712Domain: [
        { name: 'name', type: 'string' },
        { name: 'version', type: 'string' },
        { name: 'chainId', type: 'uint256' },
        { name: 'verifyingContract', type: 'address' },
      ],
      Message: [{ name: 'content', type: 'string' }],
    },
  },
]

/**
 * Mocks for EIP-1193 rpc params - eth_signTypedData_v4.
 */
export const SignTypedDataV4Params = [
  '0x0f6Fed7D7526Aaa1692438AD1D77AaA0Ea9d0a56',
  {
    domain: {
      name: 'MockDomain',
      version: '1',
      chainId: 1,
      verifyingContract: '0x9876543210fedcba9876543210fedcba98765432',
    },
    message: {
      content: 'This is a test message',
    },
    primaryType: 'Message',
    types: {
      EIP712Domain: [
        { name: 'name', type: 'string' },
        { name: 'version', type: 'string' },
        { name: 'chainId', type: 'uint256' },
        { name: 'verifyingContract', type: 'address' },
      ],
      Message: [{ name: 'content', type: 'string' }],
    },
  },
]
